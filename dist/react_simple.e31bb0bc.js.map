{"version":3,"sources":["react/index.js","react-dom/index.js","index.js"],"names":["createElement","tag","attrs","children","React","render","vnode","container","undefined","textNode","document","createTextNode","appendChild","dom","Object","keys","forEach","key","value","setAttribute","child","test","toLowerCase","style","cssText","i","k","removeAttribute","ReactDOM","ele","querySelector"],"mappings":"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","file":"react_simple.e31bb0bc.js","sourceRoot":"..","sourcesContent":["/*\n * @Author: your name\n * @Date: 2021-09-13 22:35:03\n * @LastEditTime: 2021-09-17 08:40:17\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /react_simple/react/index.js\n */\n\nconst createElement = (tag, attrs, ...children) => {\n  return {\n    tag,\n    attrs,\n    children,\n  };\n};\n\nconst React = {\n  createElement,\n};\n\nexport default React;\n","/*\n * @Author: your name\n * @Date: 2021-09-16 08:16:18\n * @LastEditTime: 2021-09-17 08:40:43\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /react_simple/react-dom/index.js\n */\n// const ele = (\n//   <div title=\"123\">\n//     hello,<span>react</span>\n//   </div>\n// );\n// babel转译上面的ele\n// const ele = /*#__PURE__*/React.createElement(\"div\", {\n//     title: \"123\"\n//   }, \"hello,\", /*#__PURE__*/React.createElement(\"span\", null, \"react\"));\n\n/**\n * 在赋值上面使用箭头函数，render有值\n ReactDOM {render: ƒ}\n */\nconst render = (vnode, container) => {\n  if (vnode === undefined) return;\n  // vnode是字符串\n  if (typeof vnode === \"string\") {\n    // 创建文本节点\n    const textNode = document.createTextNode(vnode);\n    return container.appendChild(textNode);\n  }\n  //  vnode是虚拟dom\n  const { tag, attrs } = vnode;\n  const dom = document.createElement(tag);\n  if (attrs) {\n    // 有属性 key: className title 等传进来的属性\n    Object.keys(attrs).forEach((key) => {\n      const value = attrs[key];\n      setAttribute(dom, key, value);\n    });\n  }\n\n  // 递归渲染子节点\n  vnode.children.forEach((child) => render(child, dom));\n\n  return container.appendChild(dom);\n};\n\n// 设置属性\nfunction setAttribute(dom, key, value) {\n  // 将属性名className转换成class\n  if (key === \"className\") {\n    key = \"class\";\n  }\n  // 如果是事件 onClick onBlur ...\n  if (/on\\w+/.test(key)) {\n    // 转小写\n    key = key.toLowerCase();\n    dom[key] = value || \"\";\n  } else if (key === \"style\") {\n    if (!value || typeof value === \"string\") {\n      dom.style.cssText = value || \"\";\n    } else if (value && typeof value === \"object\") {\n      for (let i in value) {\n        if (typeof value[k] === \"number\") {\n          // 有些属性直接传数值\n          dom.style[k] = value[k] + \"px\";\n        } else {\n          dom.style[k] = value[k];\n        }\n      }\n    }\n  } else {\n    // 其他属性\n    if (key in dom) {\n      dom[key] = value || \"\";\n    }\n    if (value) {\n      dom.setAttribute(key, value);\n    } else {\n      dom.removeAttribute(key);\n    }\n  }\n}\n\nconst ReactDOM = {\n  render,\n};\n\n/**\n * 在赋值下面使用箭头函数，render为空\n ReactDOM {render: undefined}\n */\n\n// const render = (vnode, container) => {\n//   if (vnode === undefined) return;\n//   if (typeof vnode === \"string\") {\n//     const textNode = document.createTextNode(vnode);\n//     return container.appendChild(textNode);\n//   }\n// };\n/**\n * 在赋值下面使用普通函数，render有值\n ReactDOM {render: ƒ}\n */\n// function render(vnode, container) {\n//   if (vnode === undefined) return;\n//   if (typeof vnode === \"string\") {\n//     const textNode = document.createTextNode(vnode);\n//     return container.appendChild(textNode);\n//   }\n// }\n\nexport default ReactDOM;\n","/*\n * @Author: your name\n * @Date: 2021-09-13 08:28:02\n * @LastEditTime: 2021-09-17 08:36:42\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /react_simple/index.js\n */\n\nimport React from \"./react\";\nimport ReactDOM from \"./react-dom\";\nconst ele = (\n  <div title=\"123\" className=\"active\">\n    hello,<span>react</span>\n  </div>\n);\n// babel转译上面的ele\n// const ele = /*#__PURE__*/React.createElement(\"div\", {\n//     title: \"123\"\n//   }, \"hello,\", /*#__PURE__*/React.createElement(\"span\", null, \"react\"));\n\n// ReactDOM.render(\"React\", document.querySelector(\"#root\"));\nReactDOM.render(ele, document.querySelector(\"#root\"));\n\n// console.log(\"ReactDOM\", ReactDOM);\n"]}